---
  title: "Example plots"
output: html_document
---
  
  
  ```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{css, echo = FALSE}
h1, h2, h3, h4 {text-align: center;}
h1  {color:#FFFAF0;
    background-color: #708090; 
    padding: 20px;
  font-weight:bold;}
h4 {background-color: #A52A2A;
    color:#FFFAF0;
    padding: 12px}
```

## This is the kind of thing that can be plotted on a webpage
Dropdown menus can let the reader look at columns of interest. Instead of plotting multiple charts, they can look at the charts that interest them.
<p>
  **Below is some fake_data used to generate the plot**
  </p>
  <p>
  This plot looks at the percenatage of 'participants' that hold different occupations. Hovering over the columns in the plot tells you more information. The dropdown menu splits this information according to age. </p> 
  
  
  
  ```{r echo=TRUE}
fake_data <- data.frame("X.1.What.Is.Your.Age?" = c("26-30", "26-30", "26-30", "31-35", "31-35", "36-40", "36-40", "36-40", "41-45", "46-50"), "X.2.What.Is.Your.Occupation?" = c("Magician", "Swamp Monster", "Magician", "Magician", "Doctor", "Doctor", "Accountant", "Accountant", "Magician", "Cleaner"))  
```
```{r echo=TRUE}
print(fake_data)
```
```{r echo=FALSE, message=FALSE}
library(ggplot2)
library(dplyr)
library(ellipsis)
library(plotly)
library(gridExtra)

```

<center>
  
  ```{r echo=FALSE, warning=FALSE}
plot_column <- function(data, column, legend.label = quo(column), groupname){
  ###This function requires the following packages: dplyr, ggplot2 and plotly.
  
  ## enquo captures expressions that you supply, in this case the column name.
  column <- enquo(column)
  groupname <- enquo(groupname)

  data2 <- data %>% 
    ##!! unquotes
    group_by(!!column, !!groupname) %>% 
    count() %>%
    ungroup() %>% 
    mutate(percent=ceiling(100*(`n`/sum(`n`)))) %>%
    group_by(!!groupname, add = T) %>% 
#    mutate(group_percent = paste0(ceiling(100*count/count, 2), "%")) %>% 
    mutate(group_percent = ceiling(`n`/sum(`n`)*100)) %>% 
    ungroup() %>% 
#    mutate(percent_nongermmulti = ceiling(100*(`n`/sum(`n`))) if {!!groupname == "NonGermMulti"}) %>% 
    mutate(column := as.factor(!!column)) %>% 
    mutate(groupname := as.factor(!!groupname)) %>% 
    select(column, group_percent, percent, `n`, groupname)
  
    print(data2)
    summary(data2)
  
  p <- plot_ly(data = data2, x = ~column, y=~percent, type = "bar", visible = T, showlegend = FALSE, hoverinfo = "text", text = ~paste("Group:", groupname, "</br></br></br>", column, "</br></br>", percent, "%"), xaxis = list(title = legend.label), yaxis = list(title = "Percent")) %>% layout(xaxis = list(title = legend.label), yaxis=list(title = "Percent")) %>% 
    add_trace(data = subset(data2, groupname == "NonGermMulti"), y = ~group_percent, visible = F, hoverinfo = "text", text = ~paste("Group:", groupname, "</br></br></br>", column, "</br></br>", group_percent, "%")) %>%
    add_trace(data = subset(data2, groupname == "NonGermAnglo"), y = ~group_percent, visible = F, hoverinfo = "text", text = ~paste("Group:", groupname, "</br></br></br>", column, "</br></br>", group_percent, "%")) %>%
    add_trace(data = subset(data2, groupname == "German"), y = ~group_percent, visible = F, hoverinfo = "text", text = ~paste("Group:", groupname, "</br></br></br>", column, "</br></br>", group_percent, "%")) %>%
    add_trace(data = subset(data2, groupname == "English"), y = ~group_percent, visible = F, hoverinfo = "text", text = ~paste("Group:", groupname, "</br></br></br>", column, "</br></br>", group_percent, "%")) %>%
    add_trace(data = subset(data2, groupname == "EnglishMulti"), y = ~group_percent, visible = F, hoverinfo = "text", text = ~paste("Group:", groupname, "</br></br></br>", column, "</br></br>", group_percent, "%")) %>%

    layout(title = legend.label,
      updatemenus = list(
        list(
          type = 'dropdown',
          active = 0,
          buttons = list(
  list(method = "restyle",
       args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
       label = "All"),
  list(method = "restyle",
       args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
       label = "NonGermMulti"),
  list(method = "restyle",
       args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
       label = "NonGermAnglo"),
  list(method = "restyle",
       args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
       label = "German"),
  list(method = "restyle",
       args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
       label = "English"), 
  list(method = "restyle",
       args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
       label = "EnglishMulti")))))
  p

}
```
```{r echo=FALSE}
#p1 <- plot_column(fake_data, column = X.1.What.Is.Your.Age., legend.label = "Age", groupname = NA)
p2 <- plot_column(multilangparents, column = X1..What.is.your.age., legend.label = "Age", groupname = group)
p2


</center>

  ```{r echo=FALSE, warning=FALSE}
plot_pie <- function(data, column, legend.label = quo(column), groupname){
  ###This function requires the following packages: dplyr, ggplot2 and plotly.
  
  ## enquo captures expressions that you supply, in this case the column name.
  column <- enquo(column)
  groupname <- enquo(groupname)
  
  data2 <- data %>% 
    ##!! unquotes
    group_by(!!column, !!groupname) %>% 
    count() %>%
    ungroup() %>% 
    mutate(percent=ceiling(100*(`n`/sum(`n`)))) %>%
    group_by(!!groupname, add = T) %>% 
    #    mutate(group_percent = paste0(ceiling(100*count/count, 2), "%")) %>% 
    mutate(group_percent = ceiling(`n`/sum(`n`)*100)) %>% 
    ungroup() %>% 
    #    mutate(percent_nongermmulti = ceiling(100*(`n`/sum(`n`))) if {!!groupname == "NonGermMulti"}) %>% 
    mutate(column := as.factor(!!column)) %>% 
    mutate(groupname := as.factor(!!groupname)) %>% 
    select(column, group_percent, percent, `n`, groupname)
  
  print(data2)
  summary(data2)
  
  p <- plot_ly(data = data2, values=~percent, type = "pie", visible = T, showlegend = FALSE, textinfo = "text", hoverinfo = "text", text = ~paste(column, "</br></br>", groupname, "</br>", percent, "%")) %>% 
    add_trace(data = subset(data2, groupname == "NonGermMulti"), values = ~group_percent, visible = F, hoverinfo = "text", text = ~paste(column, "</br></br></br>", group_percent, "%")) %>%
    add_trace(data = subset(data2, groupname == "NonGermAnglo"), values = ~group_percent, visible = F, hoverinfo = "text", text = ~paste(column, "</br></br></br>", group_percent, "%")) %>%
    add_trace(data = subset(data2, groupname == "German"), values = ~group_percent, visible = F, hoverinfo = "text", text = ~paste(column, "</br></br></br>", group_percent, "%")) %>%
    add_trace(data = subset(data2, groupname == "English"), values = ~group_percent, visible = F, hoverinfo = "text", text = ~paste(column, "</br></br></br>", group_percent, "%")) %>%
    add_trace(data = subset(data2, groupname == "EnglishMulti"), values = ~group_percent, visible = F, hoverinfo = "text", text = ~paste(column, "</br></br></br>", group_percent, "%")) %>%
    
    layout(title = legend.label,
           updatemenus = list(
             list(
               type = 'dropdown',
               active = 0,
               buttons = list(
                 list(method = "restyle",
                      args = list("visible", list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)),
                      label = "All"),
                 list(method = "restyle",
                      args = list("visible", list(FALSE, TRUE, FALSE, FALSE, FALSE, FALSE)),
                      label = "NonGermMulti"),
                 list(method = "restyle",
                      args = list("visible", list(FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)),
                      label = "NonGermAnglo"),
                 list(method = "restyle",
                      args = list("visible", list(FALSE, FALSE, FALSE, TRUE, FALSE, FALSE)),
                      label = "German"),
                 list(method = "restyle",
                      args = list("visible", list(FALSE, FALSE, FALSE, FALSE, TRUE, FALSE)),
                      label = "English"), 
                 list(method = "restyle",
                      args = list("visible", list(FALSE, FALSE, FALSE, FALSE, FALSE, TRUE)),
                      label = "EnglishMulti")))))
  p
  
}
```  
plot_pie(multilangparents, column = X10a..How.many.children.do.you.have..if.at.all., legend.label = "Number of Children", groupname = group)
labels = ~column,